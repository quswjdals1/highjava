package kr.or.ddit.basic.fileupload.controller;

import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.net.URLEncoder;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import kr.or.ddit.basic.fileupload.service.FileinfoServiceImpl;
import kr.or.ddit.basic.fileupload.service.IFileinfoService;
import kr.or.ddit.vo.FileinfoVO;


@WebServlet("/fileDownload.do")
public class FileDownload extends HttpServlet {
	private static final long serialVersionUID = 1L;


	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		
		request.setCharacterEncoding("utf-8");
		response.setCharacterEncoding("utf-8");
		
		//파라미터로 넘어온 파일번호(fileno)를 구한다.
		String strFileNo = request.getParameter("fileno");
		Long fileNo = Long.parseLong(strFileNo);
		
		//파일번호를 이용하여 db에서 해당 파일에 대한 정보를 가져온다.
		
		IFileinfoService service = FileinfoServiceImpl.getInstance();
		FileinfoVO fvo = service.getFileinfo(fileNo);
		
		//업로드된 파일들이 저장된 폴더 설정
		String uploadPath = "d:/d_other/uploadFiles";
		
		File f = new File(uploadPath);
		
		if(!f.exists()) {
			f.mkdirs();
		}
		
		//다운 받을 파일의 정보를 갖는 file객체 생성 ==> 실제 저장된 파일명 지정
		File downFile = new File(f,fvo.getSave_file_name());
		
		if(downFile.exists()) {//파일이 있을 때 작업해야 한다.
			response.setContentType("text/html; charset=utf-8");//html보낼때
			response.setContentType("application/json; charset=utf-8");//json
			response.setContentType("application/octet-stream; charset=utf-8");//file
		
			//response객체에 'content-disposition' 헤더 속성을 추가한다.
			String headerKey = "content-disposition";
			
			//위 헤더 속성의 value값에는 클라이언트가 다운받아서 저장할 파일 명을 지정한다.
			// ==>업로드 할 때의 원본 파일명을 지정해 준다.
			String headerValue = "attachment; filename=\""+fvo.getOrigin_file_name()+"\"";
			response.setHeader(headerKey, headerValue);
			
			//서버쪽의 파일을 읽어서 클라이언트로 전송한다.
			BufferedInputStream bin = null;
			BufferedOutputStream bout = null;
			
			try {
				//출력용 스트림 객체 생성 =>response객체 이용
				bout = new BufferedOutputStream(response.getOutputStream());
				
				//파일 입력용 스트림 객체 생성
				bin=new BufferedInputStream(new FileInputStream(downFile));
				byte[] temp = new byte[1024];
				int len = 0;
				while((len = bin.read(temp))>0) {
					bout.write(temp,0,len);
				}
				bout.flush();
				
			} catch (Exception e) {
				System.out.println("입출력 오류: "+e.getMessage());
			}finally {
				if(bout!=null) bout.close();
				if(bin!=null) bin.close();
			}
			
		}else {
			response.setContentType("text/html; charset=utf-8");
			response.getWriter().println("<h3>"+fvo.getOrigin_file_name()+"파일이 존재하지 않습니다.</h3>");
		}
		
	}


	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		doGet(request, response);
	}

	//다운로드시 파일명에 한글이 포함되었을때 깨지는것 방지하는 메서드
	private String getEncodedFileName(HttpServletRequest request,String filename) {
		String encodedFilename = "";
		
		String userAgent = request.getHeader("user-agent");
		
		try {
			if(userAgent.contains("MSIE")||userAgent.contains("Trident")) {
				encodedFilename = "filename=\""+URLEncoder.encode(filename,"utf-8").replaceAll("\\+", "\\ ")+"\"";
			}else {
				encodedFilename = "filename*=UTF-8''"+URLEncoder.encode(filename,"utf-8").replaceAll("\\+", "%20");
			}
		} catch (Exception e) {
			throw new RuntimeException("지원하지 않는 브라우저입니다,");
		}
	
		return encodedFilename;
	}
}
