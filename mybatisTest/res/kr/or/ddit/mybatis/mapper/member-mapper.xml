<?xml version="1.0" encoding="UTF-8"?>
<!-- 이 문서는 mybatis에서 처리할 sql문을 작성하는 문서입니다. -->
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0/EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<!-- <mapper>태그의 _namespace 속성은 Java소스에서 실행할 SQL문을 호출할 때 같이 사용되는 이름이다. -->
<mapper namespace="member">
	<!-- 
		이 부분에서는 처리할 SQL문에 맞는 태그를 사용하여 SQL문을 작성한다.
		
		*사용할 수 있는 태그들
		<select> select구문 . . . </select>
		<insert> insert구문 . . . </insert>
		<update> update구문 . . . </update>
		<delete> select구문 . . . </delete>
		...
	 -->
	 
	 <!-- 
	 	* _id속성 ==> 실행할 태그를 java소스에서 호출할 때 사용<mapper>태그의 _namespace속성값과
	  				연결해서 사용한다. (사용예: "lprod.insertLprod")
	  
	  	* parameterType속성 ==> 작성된 SQL문에 사용될 데이터가 들어가있는 객체를 기술한다.
	  							(보통 vo클래스, java의 기본형 자료형 이름, Map객체 등이 사용된다.)
	  							(vo클래스 등을 기술할 때는 해당 클래스의 전체 이름(패키지명까지)을 기술해야 한다.)
								(환경설정 xml문서에 "<typeAlias>"태그에서 지정한 alias명으로 사용할 수도 있다.)
	  -->
	 <!-- <insert _id="insertLprod" parameterType="kr.or.ddit.basic.LprodVO"> -->
	 <insert id="insertMember" parameterType="memberVo">
		insert into mymember(mem_id,mem_pass,mem_name,mem_tel,mem_addr)values(#{mem_id},#{mem_pass},#{mem_name},#{mem_tel},#{mem_addr})	 
	 </insert>
	 
	
	 
	 <update id="updateMember" parameterType="memberVo">
	 	update mymember set mem_pass=#{mem_pass},
						mem_name=#{mem_name}, 
						mem_tel=#{mem_tel}, 
						mem_addr=#{mem_addr} 
						where mem_id=#{mem_id}
	 </update>
	 
	 <!-- <set>태그를 사용하면 그안에 내용이 무엇이 있든 마지막 ,를 알아서 제거해 준다. 따라서 trim으로
	 ,를 지워줄 필요는 없음 -->
	 <update id="updateMember2" parameterType="memberVo">
	 	update mymember  
	 		<set>
	 			<if test="mem_pass!=null">mem_pass=#{mem_pass},</if>
	 			<if test="mem_tel!=null">mem_tel=#{mem_tel},</if>
	 			<if test="mem_addr!=null">mem_addr=#{mem_addr},</if>
	 			<if test="mem_name!=null">mem_name=#{mem_name},</if>	
	 		</set>
		where mem_id=#{mem_id}
	 </update>

	 
	  <!-- 
	 파라미터로 가져온 값은 ${}또는 #{}로 나타내며 db상으로 #{}는 값에 ""를 붙여서, ${}는 ""를 붙이지 않고 표현된다.
	  -->
	 
	 
	 <update id="updateMember3" parameterType="memberVo">
	 		update mymember  
	 		<trim prefix="set" suffixOverrides=",">
	 			<if test="mem_pass!=null">mem_pass=#{mem_pass},</if>
	 			<if test="mem_tel!=null">mem_tel=#{mem_tel},</if>
	 			<if test="mem_addr!=null">mem_addr=#{mem_addr},</if>
	 			<if test="mem_name!=null">mem_name=#{mem_name},</if>
	 		</trim>
		where mem_id=#{mem_id}
	 </update>
	 <!-- update2와 update3은 같은쿼리이다. 그러나 update3처럼 trim을 사용하면
	 더 간결하게 표현할 수 있다. prefix는 앞에 추가할 단어, suffixOverrides는 맨뒤에 ,가있다면
	 지워주겠다는 표현이다. -->
	 
	 
	 <!-- 
	 	parameterType에 설정되는 값이 단일값(String, int 등)이면 SQL문에 이값을 나타내는 변수명은 특별히 정해지지 않는다.
	 	(즉, 사용자 임의로 지정할 수 있다.)
	 -->
	 <delete id="deleteMember" parameterType="String">
	 	delete from mymember where mem_id=#{asdfas} <!-- 파라미터type이 String 단일값이기 때문에 변수명을 사용자 임의로 
	 													아무렇게 써도됨 -->
	 </delete>
	 
	 <select id="selectAllMember" resultType="memberVo">
	 	select * from mymember
	 </select>
	 
	 <select id="getMemberCount" parameterType="String" resultType="int">
	 	select count(*) from mymember where mem_id=#{asdf}
	 </select>
	

</mapper>

